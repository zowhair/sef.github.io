! function(e) {
    var t = function(e, t) {
        var n = e,
            o = null;
        Boolean(elementorFrontend.isEditMode());
        (o = new Element_Ready_Widget_Plugin(n)).init(o)
    };
    Element_Ready_Widget_Plugin = function(t) {
        var n = this,
            o = (t.data("id"), Boolean(elementorFrontend.isEditMode()));
        e(window), e("body"), navigator.platform;
        n.init = function() {
            return "undefined" != t.data("tooltip_data") && t.data("tooltip_data") && n.tooltip_service(t), !1
        }, n.tooltip_service = function(e) {
            let t = e.data("tooltip_data");
            var n;
            n = "yes" == t.enable_tooltip;
            var o = "yes" == t.default_open,
                i = t.tooltip_position ? t.tooltip_position : "top",
                a = t.tooltip_target ? t.tooltip_target : "element",
                l = (t.tooltip_enable_title, t.tooltip_title ? t.tooltip_title : ""),
                d = t.tooltip_content ? t.tooltip_content : "",
                r = t.tooltip_behavior ? t.tooltip_behavior : "hide",
                s = "yes" == t.tooltip_cache,
                _ = "yes" == t.tooltip_close_btn,
                c = (t.tooltip_hide_false, t.tooltip_skin ? t.tooltip_skin : "top"),
                m = "yes" == t.tooltip_detach,
                y = t.tooltip_fadein_dealy ? parseInt(t.tooltip_fadein_dealy) : 200,
                p = t.tooltip_fadeout_dealy ? parseInt(t.tooltip_fadeout_dealy) : 200,
                u = "yes" == t.hide_on_outside_click,
                w = t.tooltip_max_width ? parseInt(t.tooltip_max_width) : 300;
            n && e.find(".elementor-widget-container").first().addClass("er-widget-tooltip-enable");
            var f = e.find(".er-widget-tooltip-enable"),
                g = {
                    title: l,
                    behavior: r,
                    cache: s,
                    close: _,
                    detach: m,
                    fadeIn: y,
                    fadeOut: p,
                    position: i,
                    skin: c,
                    target: a,
                    hideOnClickOutside: u,
                    maxWidth: w
                };
            _ && (g.hideOn = !1), n && (Tipped.create(f, d, g), o && Tipped.show(f))
        }, n.getSettings = function(t, n) {
            var i = null,
                a = {};
            return o ? !!window.elementor.hasOwnProperty("elements") && (!!(i = window.elementor.elements).models && (e.each(i.models, function(e, n) {
                t == n.id && (a = n.attributes.settings.attributes)
            }), !!a.hasOwnProperty(n) && a[n])) : (t = "section" + t, !(!window.element_ready_tooltip_data || !window.element_ready_tooltip_data.hasOwnProperty(t)) && (!!window.element_ready_tooltip_data[t].hasOwnProperty(n) && window.element_ready_tooltip_data[t][n]))
        }
    };
    var n = !1,
        o = function(t) {
            n || (n = !0, void 0 !== window.elementor && (elementor.settings.page.addChangeCallback("eready_cookie_consent_enable", _), elementor.settings.page.addChangeCallback("eready_cookie_consent_title", r), elementor.settings.page.addChangeCallback("eready_cookie_consent_message", s)), document.cookie.split(";").forEach(function(e) {
                document.cookie = e.replace(/^ +/, "").replace(/=.*/, "=;expires=" + (new Date).toUTCString() + ";path=/")
            }), "yes" == element_ready_cookie_consent.enable && ($cookie_obj = {
                onAccept: function() {
                    c(0)
                },
                moreInfoLabel: element_ready_cookie_consent.more_info_lavel,
                acceptBtnLabel: element_ready_cookie_consent.accept_cookie_lavel,
                advancedBtnLabel: element_ready_cookie_consent.advanced_cookie_lavel,
                expires: element_ready_cookie_consent.expire,
                link: element_ready_cookie_consent.more_info_link.url,
                delay: parseInt(element_ready_cookie_consent.delay),
                uncheckBoxes: "yes" == element_ready_cookie_consent.cookie_unchecked,
                element_ready_cookie_consent: element_ready_cookie_consent,
                title: element_ready_cookie_consent.title || "Cookies & Privacy",
                message: element_ready_cookie_consent.message || "This website uses cookies to ensure you get the best experience on our website."
            }, function(e) {
                for (var t = e + "=", n = decodeURIComponent(document.cookie).split(";"), o = 0; o < n.length; o++) {
                    for (var i = n[o];
                        " " == i.charAt(0);) i = i.substring(1);
                    if (0 == i.indexOf(t)) return i.substring(t.length, i.length)
                }
                return ""
            }("element_ready_global") || e("body").ihavecookies($cookie_obj)))
        },
        i = function(e) {
            var t = e,
                n = null;
            Boolean(elementorFrontend.isEditMode());
            (n = new Element_Ready_Conditional_Plugin(t)).init(n)
        };
    Element_Ready_Conditional_Plugin = function(t) {
        var n = this,
            o = t.data("id"),
            i = Boolean(elementorFrontend.isEditMode());
        e(window), e("body"), navigator.platform;
        n.init = function() {
            return n.element_ready_conditional(o), !1
        }, n.element_ready_conditional = function(e) {
            let o = !1,
                i = !1;
            o = n.getSettings(e, "element_ready_pro_conditional_section_btn_enable"), i = Boolean(n.getSettings(e, "element_ready_pro_conditional_section_show")), "yes" == o ? (t.removeClass("element-ready-pro-conditional-content-hide-if"), t.addClass("element-ready-pro-conditional-content-container"), i ? t.removeClass("element-ready-pro-conditional-content-hide-if") : t.addClass("element-ready-pro-conditional-content-hide-if")) : (t.removeClass("element-ready-pro-conditional-content-container"), t.removeClass("element-ready-pro-conditional-content-hide-if"))
        }, n.getSettings = function(t, n) {
            var o = null,
                a = {};
            return i ? !!window.elementor.hasOwnProperty("elements") && (!!(o = window.elementor.elements).models && (e.each(o.models, function(e, n) {
                t == n.id && (a = n.attributes.settings.attributes)
            }), !!a.hasOwnProperty(n) && a[n])) : (t = "section" + t, !(!window.element_ready_pro_conditional_section_data || !window.element_ready_pro_conditional_section_data.hasOwnProperty(t)) && (!!window.element_ready_pro_conditional_section_data[t].hasOwnProperty(n) && window.element_ready_pro_conditional_section_data[t][n]))
        }
    };
    var a = function(e) {
        var t = e,
            n = null;
        Boolean(elementorFrontend.isEditMode());
        (n = new Element_ready_Sticky_Menu_Plugin(t)).init(n)
    };
    Element_ready_Sticky_Menu_Plugin = function(t) {
        var n = this,
            o = t.data("id"),
            i = Boolean(elementorFrontend.isEditMode()),
            a = e(window);
        e("body"), navigator.platform;
        n.init = function() {
            return n.element_ready_sticky(o), !1
        }, n.element_ready_sticky = function(e) {
            var o, i, l = 110;
            o = n.getSettings(e, "element_ready_global_sticky"), i = n.getSettings(e, "element_ready_sticky_type"), (l = parseInt(n.getSettings(e, "element_ready_sticky_offset"))) < 5 && (l = 110), "yes" == o ? (t.addClass("element-ready-sticky-container"), "top" == i && (t.addClass("top"), t.removeClass("bottom")), "bottom" == i && (t.addClass("bottom"), t.removeClass("top")), "" == i && (t.removeClass("top"), t.removeClass("bottom")), a.on("scroll", function(e) {
                a.scrollTop() < l ? t.removeClass("element-ready-sticky") : t.addClass("element-ready-sticky")
            })) : t.removeClass("element-ready-sticky-container")
        }, n.getSettings = function(t, n) {
            var o = null,
                a = {};
            return i ? !!window.elementor.hasOwnProperty("elements") && (!!(o = window.elementor.elements).models && (e.each(o.models, function(e, n) {
                t == n.id && (a = n.attributes.settings.attributes)
            }), !!a.hasOwnProperty(n) && a[n])) : (t = "section" + t, !(!window.element_ready_section_sticky_data || !window.element_ready_section_sticky_data.hasOwnProperty(t)) && (!!window.element_ready_section_sticky_data[t].hasOwnProperty(n) && window.element_ready_section_sticky_data[t][n]))
        }
    };
    var l = function(e) {
        var t = e,
            n = null;
        Boolean(elementorFrontend.isEditMode());
        (n = new Element_Ready_Dismissable__Section_Plugin(t)).init(n)
    };
    Element_Ready_Dismissable__Section_Plugin = function(t) {
        var n = this,
            o = t.data("id"),
            i = Boolean(elementorFrontend.isEditMode());
        e(window), e("body");
        n.init = function() {
            return n.element_ready_dismiss(o), !1
        }, n.element_ready_dismiss = function(o) {
            var i, a, l, d, r = 500,
                s = !1,
                _ = "",
                c = "fa fa-times";
            i = n.getSettings(o, "element_ready_section_dissmis"), d = n.getSettings(o, "element_ready_main_section__dismissabley_close_icon"), l = n.getSettings(o, "element_ready_section_dissmis_timeout"), a = n.getSettings(o, "element_ready_section_dissmis_type"), void 0 !== d.value && null !== d.value && (c = d.value), void 0 !== d.library && null !== d.library && "svg" == d.library && (s = !0, _ = `<img src="${d.value.url}"/>`), void 0 !== l.size && null !== l.size && (r = l.size), "yes" == i && (t.addClass("element-ready-dismissable-container"), s ? t.prepend(`<div class="element-ready-section--dismissable-html">${_}</div> `) : t.prepend(`<div class="element-ready-section--dismissable-html"><i class="${c}"> </i></div> `), t.on("click", ".element-ready-section--dismissable-html", function(n) {
                "slideUp" == a ? t.slideUp(r, function() {
                    e(this).remove()
                }) : t.fadeOut(r, function() {
                    e(this).remove()
                })
            }))
        }, n.getSettings = function(t, n) {
            var o = null,
                a = {};
            return i ? !!window.elementor.hasOwnProperty("elements") && (!!(o = window.elementor.elements).models && (e.each(o.models, function(e, n) {
                t == n.id && (a = n.attributes.settings.attributes)
            }), !!a.hasOwnProperty(n) && a[n])) : (t = "section" + t, !(!window.element_ready_section_dismiss_data || !window.element_ready_section_dismiss_data.hasOwnProperty(t)) && (!!window.element_ready_section_dismiss_data[t].hasOwnProperty(n) && window.element_ready_section_dismiss_data[t][n]))
        }
    }, Element_ready_Live_Button_Module = function(t) {
        var n = this,
            o = t.data("id"),
            i = Boolean(elementorFrontend.isEditMode());
        e(window), e("body"), navigator.platform;
        n.init = function() {
            return n.element_ready_live_btn(o), !1
        }, n.element_ready_live_btn = function(e) {
            let o = wp.template("element-ready-live-btn"),
                i = !1,
                a = "#",
                l = "live copy";
            i = n.getSettings(e, "element_ready_pro_live_btn_enable"), l = n.getSettings(e, "element_ready_pro_live_btn_text"), a = n.getSettings(e, "element_ready_pro_live_link"), "yes" == i ? (t.addClass("element-ready-pro-live-btn"), setTimeout(function() {
                t.append(o({
                    text: l,
                    link: a
                }))
            }, 2e3)) : t.removeClass("element-ready-pro-live-btn")
        }, n.getSettings = function(t, n) {
            var o = null,
                a = {};
            return i ? !!window.elementor.hasOwnProperty("elements") && (!!(o = window.elementor.elements).models && (e.each(o.models, function(e, n) {
                t == n.id && (a = n.attributes.settings.attributes)
            }), !!a.hasOwnProperty(n) && a[n])) : (t = "section" + t, !(!window.element_ready_pro_section_live_button_data || !window.element_ready_pro_section_live_button_data.hasOwnProperty(t)) && (!!window.element_ready_pro_section_live_button_data[t].hasOwnProperty(n) && window.element_ready_pro_section_live_button_data[t][n]))
        }
    };
    var d = function(e) {
        var t = e,
            n = null;
        Boolean(elementorFrontend.isEditMode());
        (n = new Element_ready_Live_Button_Module(t)).init(n)
    };

    function r(t) {
        e("#gdpr-cookie-message > h4").html(t), elementor.saver.update({
            onSuccess: function() {
                element_ready_cookie_consent.title = t, elementor.reloadPreview(), elementor.once("preview:loaded", function() {
                    elementor.getPanelView().setPage("page_settings")
                })
            }
        })
    }

    function s(t) {
        e("#gdpr-cookie-message > p").html(t)
    }

    function _(t) {
        $cookie__obj = {
            onAccept: function() {
                c(0)
            },
            moreInfoLabel: element_ready_cookie_consent.more_info_lavel,
            acceptBtnLabel: element_ready_cookie_consent.accept_cookie_lavel,
            advancedBtnLabel: element_ready_cookie_consent.advanced_cookie_lavel,
            expires: element_ready_cookie_consent.expire,
            link: element_ready_cookie_consent.more_info_link.url,
            delay: parseInt(element_ready_cookie_consent.delay),
            uncheckBoxes: "yes" == element_ready_cookie_consent.cookie_unchecked,
            element_ready_cookie_consent: element_ready_cookie_consent,
            title: element_ready_cookie_consent.title || "Cookies & Privacy",
            message: element_ready_cookie_consent.message || "This website uses cookies to ensure you get the best experience on our website."
        }, "yes" == t && e("body").ihavecookies($cookie__obj), elementor.reloadPreview()
    }

    function c(e = !1, t = "element_ready_global", n = "Q") {
        var o = parseInt(element_ready_cookie_consent.expire);
        if (void 0 !== o) {
            var i = new Date;
            "day" == element_ready_cookie_consent.expire_type && i.setTime(i.getTime() + 24 * o * 60 * 60 * 1e3), "sec" == element_ready_cookie_consent.expire_type && i.setTime(i.getTime() + 1e3 * o), "min" == element_ready_cookie_consent.expire_type && i.setTime(i.getTime() + 60 * o * 1e3), "hour" == element_ready_cookie_consent.expire_type && i.setTime(i.getTime() + 60 * o * 60 * 1e3);
            var a = "; expires=" + i.toGMTString()
        } else a = "";
        document.cookie = e ? t + "=" + n + a + "; path=/" : t + "=" + n + a + ";"
    }
    e(window).on("elementor/frontend/init", function() {
        elementorFrontend.hooks.addAction("frontend/element_ready/widget", t), "undefined" != typeof element_ready_cookie_consent && elementorFrontend.hooks.addAction("frontend/element_ready/global", o), elementorFrontend.hooks.addAction("frontend/element_ready/section", l), elementorFrontend.hooks.addAction("frontend/element_ready/section", a), elementorFrontend.hooks.addAction("frontend/element_ready/section", i), "undefined" != typeof ercp && elementorFrontend.hooks.addAction("frontend/element_ready/section", d)
    }), e(document).on("click", ".element-ready-live-btn-wrp a", function(t) {
        let n = e(this),
            o = n.text(),
            i = n.parent().parent().get(0),
            a = e(i).data("id");
        var l = {
            action: "element_ready_fetch_live_copy_data",
            type: e(i).data("element_type"),
            section_id: a,
            post_id: elementorFrontend.config.post.id
        };
        fetch(ercp.ajaxurl, {
            method: "POST",
            headers: new Headers({
                "Content-Type": "application/x-www-form-urlencoded"
            }),
            body: e.param(l)
        }).then(e => e.json()).then(e => {
            let t = e.data;
            localStorage.clear(), xdLocalStorage.setItem("element-ready-ercp-element", JSON.stringify(t), function(e) {
                n.html("<span>&#10003;</span> Copied section").css({
                    "font-style": "italic"
                })
            }), setTimeout(function() {
                n.text(o).css({
                    "font-style": "normal"
                })
            }, 1e3)
        }).catch(function(e) {
            n.text("Copy error").css({
                "font-style": "italic"
            })
        })
    }), "undefined" != typeof ercp && xdLocalStorage.init({
        iframeUrl: ercp.script_url,
        initCallback: function() {}
    })
}(jQuery);